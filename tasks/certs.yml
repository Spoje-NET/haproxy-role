---

- name: Retrieve Certbot certificates using local module
  certbot_certificates:
  register: certbot_data

- name: Debug Certbot certificates
  ansible.builtin.debug:
    msg: "{{ certbot_data.certificates }}"

- name: Include cleanup tasks
  ansible.builtin.include_tasks: cleanup.yml


- name: Find certificates to renew
  ansible.builtin.set_fact:
    certs_to_renew: >-
      {{
        certbot_data.certificates
        | selectattr('days_until_expiration', 'lt', 30)
        | map(attribute='name')
        | list
      }}

- name: Debug certificates to renew
  ansible.builtin.debug:
    msg: "Certificates to renew: {{ certs_to_renew }}"

- name: Renew certificates close to expiration
  ansible.builtin.command: >
    certbot renew --cert-name {{ item }}
    --non-interactive --quiet --deploy-hook /usr/bin/certbot-haproxy-deploy
  with_items: "{{ certs_to_renew }}"
  register: certbot_renew_result
  changed_when: true
  ignore_errors: true

- name: Debug Certbot Renew Output
  ansible.builtin.debug:
    msg: "{{ certbot_renew_result.stdout_lines | default([]) + certbot_renew_result.stderr_lines | default([]) }}"

- name: Check if FQDN certificate exists for fallback
  ansible.builtin.stat:
    path: "/etc/letsencrypt/live/{{ ansible_fqdn }}/fullchain.pem"
  register: fqdn_cert_file_status
  changed_when: false
  check_mode: false

- name: Create fallback certificate for HAProxy
  ansible.builtin.command: >
    cat /etc/letsencrypt/live/{{ ansible_fqdn }}/fullchain.pem
    /etc/letsencrypt/live/{{ ansible_fqdn }}/privkey.pem
    > /etc/haproxy/ssl/__fallback.pem
  when: fqdn_cert_file_status.stat.exists

- name: Set permissions for fallback certificate
  ansible.builtin.file:
    path: /etc/haproxy/ssl/__fallback.pem
    owner: haproxy
    group: haproxy
    mode: '0600'
  when: fqdn_cert_file_status.stat.exists
